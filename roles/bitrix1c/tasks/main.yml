---
- name: Disable selinux
  selinux:
    policy: targeted
    state: disabled



- name: Install EPEL repo.
  yum:
    name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm
    state: present

- name: Import EPEL GPG key.
  rpm_key:
    key: /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-{{ ansible_distribution_major_version }}
    state: present

- name: Install remi repo.
  yum:
    name: http://rpms.famillecollet.com/enterprise/remi-release-{{ ansible_distribution_major_version }}.rpm
    state: present

- name: Import remi GPG key.
  rpm_key:
    key: http://rpms.remirepo.net/RPM-GPG-KEY-remi
    state: present



- name: Install percona.
  yum:
    name: http://www.percona.com/downloads/percona-release/redhat/0.1-4/percona-release-0.1-4.noarch.rpm
    state: present

- name: Import percona GPG key.
  rpm_key:
    key: http://www.percona.com/downloads/RPM-GPG-KEY-percona
    state: present

- name: Remove the php-pecl-xhprof package
  yum:
    name: php-pecl-xhprof
    state: absent



- name: Disable php5.6
  ini_file:
    path: /etc/yum.repos.d/remi.repo
    section: remi-php56
    option: enable
    value: 0

- name: Enable php7.0
  ini_file:
    path: /etc/yum.repos.d/remi-php70.repo
    section: remi-php70
    option: enable
    value: 1



- name: Import bitrix GPG key.
  rpm_key:
    key: http://repos.1c-bitrix.ru/yum/RPM-GPG-KEY-BitrixEnv
    state: present

- name: Bitrix repo
  template:
    src: etc/yum.repos.d/bitrix.repo
    dest: /etc/yum.repos.d/bitrix.repo



- name: Configure Nodejs on centos 6
  command: "curl --silent --location https://rpm.nodesource.com/setup_6.x | bash -"
  when: ansible_distribution_major_version < 7

- name: Configure Nodejs on centos 7
  yum: name=https://kojipkgs.fedoraproject.org//packages/http-parser/2.7.1/3.el7/x86_64/http-parser-2.7.1-3.el7.x86_64.rpm
  when: ansible_distribution_version == "7.3"



- name: Check if mariadb is installed
  yum:
    list=mariadb
  register: pkg

- name: Removing old mariadb-libs package
  package:
    name=mariadb-libs
    state=absent
  when: pkg.results|selectattr("yumstate", "match", "installed")|list|length == 0

- name: Check if mysql is installed
  yum:
    list=mysql
  register: pkg

- name: Removing old mysql-libs package
  package:
    name=mysql-libs
    state=absent
  when: pkg.results|selectattr("yumstate", "match", "installed")|list|length == 0



- name: Config excludes
  lineinfile:
    path: /etc/yum.conf
    state: present
    regexp: 'exclude=.*'
    line: 'exclude=ansible1.9,mysql,mariadb,mariadb-*,Percona-XtraDB-*,Percona-*-55,Percona-*-56,Percona-*-51,Percona-*-50'



- name: Update yum
  command: yum -y update



- name: Install packages
  yum:
    name: '{{ item }}'
    state: latest
  with_items:
    - 'php'
    - 'php-mysqlnd'
    - 'php-pecl-apcu'
    - 'php-pecl-zendopcache'
    - 'bitrix-env'
    - 'MySQL-python'



- name: Check mysql file password
  command: "mysql --login-path=~/.my.cnf -sse 'select 1'"
  register: pass_check_result
  ignore_errors: true

- name: reset mysql password
  block:
    - name: stop mysql
      systemd:
        name: mysql
        state: stopped

    - name: copy sql reset commands
      template:
        src: reset_pass.sql
        dest: /tmp/

    - name: reset command
      command: /usr/sbin/mysqld --init-file=/tmp/reset_pass.sql

    - name: generate client config
      template:
        src: my.cnf
        dest: ~/.my.cnf

    - name: start mysql
      systemd:
        name: mysql
        state: started
  when: pass_check_result.rc != 0

- name: remove remote root
  command: mysql -sse "DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');"

- name: test database is absent
  mysql_db:
    name: test
    state: absent

- name: anonymous users are absent
  mysql_user:
    name: ''
    state: absent
    host_all: yes

- name: finalize
  shell: '. /opt/webdir/bin/bitrix_utils.sh || exit 1; generate_ansible_inventory 0 "general" ""; configure_iptables'
  tags: test
